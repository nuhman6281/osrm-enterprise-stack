events {
    worker_connections 1024;
}

http {
    # Upstream configuration for OSRM backends
    upstream osrm_backends {
        least_conn;
        server osrm-backend-1:5000 max_fails=3 fail_timeout=30s weight=1;
        server osrm-backend-2:5000 max_fails=3 fail_timeout=30s weight=1;
    }
    
    # Logging
    log_format lb_format '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" upstream: $upstream_addr';
    
    access_log /var/log/nginx/lb_access.log lb_format;
    error_log /var/log/nginx/lb_error.log warn;
    
    # Main load balancer server
    server {
        listen 80;
        
        # Health check endpoint
        location /health {
            return 200 "healthy\n";
            add_header Content-Type text/plain;
            access_log off;
        }
        
        # Route all OSRM requests to backend pool
        location / {
            proxy_pass http://osrm_backends;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Retry logic
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 30s;
        }
    }
} 